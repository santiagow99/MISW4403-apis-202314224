{
	"info": {
		"_postman_id": "f9576b43-f7c4-4db8-9676-26c92a8dbca4",
		"name": "Aerolineas-Aeropuertos",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "27916063"
	},
	"item": [
		{
			"name": "Add a aeropuerto",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var data = pm.response.json()\r",
							"pm.globals.set('aeropuertoId', data.id);\r",
							"\r",
							"pm.test(\"Status code is 201\", function() {\r",
							"    pm.response.to.have.status(201);\r",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"nombre\": \"Aeropuerto Internacional El Dorado\",\r\n  \"codigo\": \"BOG\",\r\n  \"pais\": \"Colombia\",\r\n  \"ciudad\": \"Bogotá\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/aeropuerto",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"aeropuerto"
					]
				}
			},
			"response": []
		},
		{
			"name": "Add a aerolinea",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var data = pm.response.json()\r",
							"pm.globals.set('aerolineaId', data.id);\r",
							"\r",
							"pm.test(\"Status code is 201\", function() {\r",
							"    pm.response.to.have.status(201);\r",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"nombre\": \"Aerolínea de Ejemplo\",\r\n  \"descripcion\": \"Una aerolínea de ejemplo para demostraciones\",\r\n  \"fechaFundacion\": \"2005-10-15T00:00:00Z\",\r\n  \"paginaWeb\": \"https://www.ejemplo-aerolinea.com\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/aerolinea",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"aerolinea"
					]
				}
			},
			"response": []
		},
		{
			"name": "Add an aeropuerto to an aerolinea",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {\r",
							"   pm.response.to.have.status(201);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/aeropuerto-aerolinea/{{aerolineaId}}/aeropuerto/{{aeropuertoId}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"aeropuerto-aerolinea",
						"{{aerolineaId}}",
						"aeropuerto",
						"{{aeropuertoId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Add an invalid aeropuerto to an aerolinea",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {\r",
							"   pm.response.to.have.status(404);\r",
							"});\r",
							"\r",
							"pm.test(\"Get expected error message\", function () {\r",
							"   var data = pm.response.json();\r",
							"   pm.expect(data.message).to.eql(\"The airport with the given id was not found\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/aeropuerto-aerolinea/{{aerolineaId}}/aeropuerto/00000000-0000-0000-0000-000000000000",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"aeropuerto-aerolinea",
						"{{aerolineaId}}",
						"aeropuerto",
						"00000000-0000-0000-0000-000000000000"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get an aeropuerto from an aerolinea",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"   pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/aeropuerto-aerolinea/{{aerolineaId}}/aeropuerto/{{aeropuertoId}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"aeropuerto-aerolinea",
						"{{aerolineaId}}",
						"aeropuerto",
						"{{aeropuertoId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete an aeropuerto from an aerolinea",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 204\", function () {\r",
							"   pm.response.to.have.status(204);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/aeropuerto-aerolinea/{{aerolineaId}}/aeropuerto/{{aeropuertoId}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"aeropuerto-aerolinea",
						"{{aerolineaId}}",
						"aeropuerto",
						"{{aeropuertoId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete an invalid aeropuerto from an aerolinea",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {\r",
							"   pm.response.to.have.status(412);\r",
							"});\r",
							"\r",
							"pm.test(\"Get expected error message\", function () {\r",
							"   var data = pm.response.json();\r",
							"   pm.expect(data.message).to.eql(\"The airport with the given id is not associated with the airline\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/aeropuerto-aerolinea/{{aerolineaId}}/aeropuerto/00000000-0000-0000-0000-000000000000",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"aeropuerto-aerolinea",
						"{{aerolineaId}}",
						"aeropuerto",
						"00000000-0000-0000-0000-000000000000"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update aeropuertos from an aerolinea",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {\r",
							"   pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "[\r\n    {\r\n        \"nombre\": \"Aeropuerto Internacional El Dorado\",\r\n        \"codigo\": \"MED\",\r\n        \"pais\": \"Colombia\",\r\n        \"ciudad\": \"Medellin\"\r\n    }\r\n]",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/aeropuerto-aerolinea/{{aerolineaId}}/aeropuerto/",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"aeropuerto-aerolinea",
						"{{aerolineaId}}",
						"aeropuerto",
						""
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "http://localhost:3000/api/v1",
			"type": "string"
		}
	]
}